apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: d2s-workflow-transform-xml-
spec:
  entrypoint: execute-workflow

  # volumeClaimTemplates:                 # define volume, same syntax as k8s Pod spec
  # - metadata:
  #     name: workdir                     # name of volume claim
  #     annotations:
  #       volume.beta.kubernetes.io/storage-class: maprfs-ephemeral
  #       volume.beta.kubernetes.io/storage-provisioner: mapr.com/maprfs
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 100Gi                  # Gi => 1024 * 1024 * 1024
  
  # Existing volume
  volumes:
  - name: workdir
    persistentVolumeClaim:
      claimName: data2services-storage

  arguments:
    parameters:
    - name: dataset
      value: null
    - name: download_username
      value: my_download_username
    - name: sparql_tmp_graph_uri
      value: https://w3id.org/data2services/graph/xml2rdf
    - name: sparql_tmp_triplestore_url
      value: http://node000002.cluster.ids.unimaas.nl/
    - name: sparql_tmp_triplestore_repository
      value: test
    - name: sparql_tmp_triplestore_username
      value: import_user
    - name: sparql_tmp_triplestore_password
      value: null
    - name: sparql_final_triplestore_url
      value: http://node000002.cluster.ids.unimaas.nl/
    - name: sparql_final_triplestore_repository
      value: test
    - name: sparql_final_triplestore_username
      value: import_user
    - name: sparql_final_triplestore_password
      value: null
    - name: sparql_final_graph_uri
      value: https://w3id.org/data2services/graph/biolink
    - name: sparql_tmp_service_url
      value: repository:test
    - name: sparql_insert_metadata_path
      value: null
    - name: sparql_transform_queries_path
      value: null

  templates:
  - name: execute-workflow
    steps:
    - - name: download-files
        template: d2s-download
    - - name: run-xml2rdf
        template: xml2rdf
    - - name: run-rdf-upload
        template: rdf-upload
    - - name: sparql-insert-metadata
        template: d2s-sparql-operations
        arguments:
          parameters:
          - name: sparql_queries_path
            value: "{{workflow.parameters.sparql_insert_metadata_path}}"
          - name: sparql_input_graph
            value: "{{workflow.parameters.sparql_tmp_graph_uri}}"
          - name: sparql_output_graph
            value: "{{workflow.parameters.sparql_final_graph_uri}}"
          - name: sparql_service_url
            value: "{{workflow.parameters.sparql_tmp_service_url}}"
    - - name: sparql-transform-queries
        template: d2s-sparql-operations
        arguments:
          parameters:
          - name: sparql_queries_path
            value: "{{workflow.parameters.sparql_transform_queries_path}}"
          - name: sparql_input_graph
            value: "{{workflow.parameters.sparql_tmp_graph_uri}}"
          - name: sparql_output_graph
            value: "{{workflow.parameters.sparql_final_graph_uri}}"
          - name: sparql_service_url
            value: "{{workflow.parameters.sparql_tmp_service_url}}"
    - - name: sparql-compute-hcls-stats
        template: d2s-sparql-operations
        arguments:
          parameters:
          - name: sparql_queries_path
            value: https://github.com/MaastrichtU-IDS/data2services-transform-repository/tree/master/sparql/compute-hcls-stats
          - name: sparql_input_graph
            value: "{{workflow.parameters.sparql_final_graph_uri}}"
          - name: sparql_output_graph
            value: "{{workflow.parameters.sparql_final_graph_uri}}"
          - name: sparql_service_url
            value: "{{workflow.parameters.sparql_tmp_service_url}}"
            # TODO: remove?


  - name: d2s-download
    container:
      image: vemonet/data2services-download:latest
      args: [ "--download-datasets", "{{workflow.parameters.dataset}}", "--working-path", "/data/{{workflow.parameters.dataset}}/input",
      "--username", "{{workflow.parameters.download_username}}"] 
      #"--password", "$DOWNLOADPASSWORD" ] # TODO: secret not working
      # env:
      # - name: DOWNLOADPASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       name: d2s-download-password
      #       key: password
      volumeMounts:
      - name: workdir
        mountPath: /data

  - name: xml2rdf
    container:
      image: vemonet/xml2rdf:latest
      args: [ "-i", "/data/{{workflow.parameters.dataset}}/input/{{workflow.parameters.dataset}}/*.xml*", 
        "-o", "/data/{{workflow.parameters.dataset}}/output/rdf_output.nq", "-g", "{{workflow.parameters.sparql_tmp_graph_uri}}" ]
      volumeMounts:
      - name: workdir
        mountPath: /data

  - name: rdf-upload
    container:
      image: vemonet/rdf-upload:latest
      args: ["-url", "{{workflow.parameters.sparql_tmp_triplestore_url}}", 
      "-rep", "{{workflow.parameters.sparql_tmp_triplestore_repository}}", 
      "-if", "/data/{{workflow.parameters.dataset}}/output/rdf_output.nq", 
      "-un", "{{workflow.parameters.sparql_tmp_triplestore_username}}", "-pw", "{{workflow.parameters.sparql_tmp_triplestore_password}}"]
      #"-un", "{{workflow.parameters.sparql_tmp_triplestore_username}}", "-pw", "$SPARQLPASSWORD"]  # TODO: secret not working
      # env:
      # - name: SPARQLPASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       name: d2s-sparql-password
      #       key: password
      volumeMounts:
      - name: workdir
        mountPath: /data

  - name: d2s-sparql-operations
    inputs:
      parameters:
      - name: sparql_queries_path
      - name: sparql_input_graph
      - name: sparql_output_graph
      - name: sparql_service_url
    container:
      image: vemonet/data2services-sparql-operations:latest
      args: ["-ep", "{{workflow.parameters.sparqlEndpoint}}", "-rep", "{{workflow.parameters.sparqlRepository}}", 
    "-op", "update", "-f", "{{inputs.parameters.sparql_queries_path}}",
    "-un", "{{workflow.parameters.sparqlUsername}}", 
    "-pw", "{{workflow.parameters.sparqlPassword}}",
    # "-pw", "$SPARQLPASSWORD",  # TODO: secret not working
    "--var-input", "{{inputs.parameters.sparql_input_graph}}",
    "--var-output", "{{inputs.parameters.sparql_output_graph}}", 
    "--var-service", "{{inputs.parameters.sparql_service_url}}", ]
      # env:
      # - name: SPARQLPASSWORD
      #   valueFrom:
      #     secretKeyRef:
      #       name: d2s-sparql-password
      #       key: password
